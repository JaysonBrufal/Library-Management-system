class Book:
    def __init__(self, title, author, genre, status="Available"):
        self.title = title
        self.author = author
        self.genre = genre
        self.status = status

class Library:
    def __init__(self):
        self.books = []

    def add_book(self, title, author, genre):
        new_book = Book(title, author, genre)
        self.books.append(new_book)
        print(f"Book '{title}' added successfully!")

    def update_book(self, title, author=None, genre=None):
        for book in self.books:
            if book.title == title:
                if author:
                    book.author = author
                if genre:
                    book.genre = genre
                print(f"Book '{title}' updated successfully!")
                return
        print(f"Book '{title}' not found!")

    def delete_book(self, title):
        for book in self.books:
            if book.title == title:
                self.books.remove(book)
                print(f"Book '{title}' deleted successfully!")
                return
        print(f"Book '{title}' not found!")

    def borrow_book(self, title):
        for book in self.books:
            if book.title == title and book.status == "Available":
                book.status = "Borrowed"
                print(f"Book '{title}' borrowed successfully!")
                return
        print(f"Book '{title}' is not available or not found!")

    def return_book(self, title):
        for book in self.books:
            if book.title == title and book.status == "Borrowed":
                book.status = "Available"
                print(f"Book '{title}' returned successfully!")
                return
        print(f"Book '{title}' is not borrowed or not found!")

    def search_books(self, query):
        results = [book for book in self.books if query.lower() in book.title.lower() or query.lower() in book.author.lower() or query.lower() in book.genre.lower()]
        if results:
            print("Search results:")
            for book in results:
                print(f"Title: {book.title}, Author: {book.author}, Genre: {book.genre}, Status: {book.status}")
        else:
            print("No results found!")

    def display_books(self):
        if self.books:
            print("Available books:")
            for book in self.books:
                print(f"Title: {book.title}, Author: {book.author}, Genre: {book.genre}, Status: {book.status}")
        else:
            print("No books available!")

def main():
    library = Library()

    while True:
        print("\nLibrary Management System")
        print("1. Add book")
        print("2. Update book")
        print("3. Delete book")
        print("4. Borrow book")
        print("5. Return book")
        print("6. Search books")
        print("7. Display books")
        print("8. Exit")

        choice = input("Enter your choice: ")

        if choice == "1":
            title = input("Enter book title: ")
            author = input("Enter book author: ")
            genre = input("Enter book genre: ")
            library.add_book(title, author, genre)
        elif choice == "2":
            title = input("Enter book title: ")
            author = input("Enter new author (optional): ")
            genre = input("Enter new genre (optional): ")
            library.update_book(title, author or None, genre or None)
        elif choice == "3":
            title = input("Enter book title: ")
            library.delete_book(title)
        elif choice == "4":
            title = input("Enter book title: ")
            library.borrow_book(title)
        elif choice == "5":
            title = input("Enter book title: ")
            library.return_book(title)
        elif choice == "6":
            query = input("Enter search query: ")
            library.search_books(query)
        elif choice == "7":
            library.display_books()
        elif choice == "8":
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
